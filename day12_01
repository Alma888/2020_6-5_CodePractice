# 2020_6-5_CodePractice

//标题：无缓存交换
//      请编写一个函数，函数内不使用任何临时变量，直接交换两个数的值。
//  给定一个int数组AB，其第零个元素和第一个元素为待交换的值，请返回交换后的数组。
//  【测试样例】：[1,2]
//  【返回】：    [2,1]
//  【题目解析】：这道题是一个很经典的不使用额外空间进行两个数交换的经典问题。
//                大家可以尝试使用加减法或者位运算来解决此问题。

//【解题思路】：
//下面给出位运算的理论计算基础:
//x ^ x == 0
//x ^ 0 == x
//设M，N是常数，且a=M，b=N，则交换使用异或运算交换a和b的过程如下：
//a = a^b=M^N;
//b = a^b = M^N^N = M^0 = M;//b交换成功
//a = a^b = M^N^M = M^M^N = 0^N = N;//a交换成功
import java.util.Arrays;

public class day12_01 {
    public static int[] exchange(int[] AB){
        AB[0]^=AB[1]; //3
        AB[1]^=AB[0]; //1
        AB[0]^=AB[1];//2
        return AB;
    }
    public static void main(String[] args) {
        int[] AB={1,2};
        exchange(AB);
        System.out.println(Arrays.toString(AB));

    }
}
